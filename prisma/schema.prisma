// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    emailAddress String @unique
    firstName String
    lastName String
    imageUrl String?
    credits Int @default(150)

    userToProjects UserToProject[]
    questionsAsked Question[]
}

model Meeting {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    meetingUrl String // firebase storage url

    projectId String
    project Project @relation(fields: [projectId], references: [id])

    status MeetingStatus @default(PROCESSING)
    issues Issue[]
}

enum MeetingStatus {
    PROCESSING
    COMPLETED
}

model Issue {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    start String
    end String
    gist String
    headline String
    summary String

    meetingId String
    meeting Meeting @relation(fields: [meetingId], references: [id])
}

model Project {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String
    githubUrl String
    deletedAt DateTime?

    userToProjects UserToProject[]
    commits Commit[]
    sourceCodeEmbedding SourceCodeEmbedding[]
    savedQuestion Question[]
    meeting Meeting[]
}

model UserToProject {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId String
    projectId String

    user User @relation(fields: [userId], references: [id])
    project Project @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])

}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode String
    fileName String
    summary String

    projectId String
    project Project @relation(fields: [projectId], references: [id])
}

model Question {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    question String
    answer String

    fileReferences Json?

    projectId String
    userId String

    project Project @relation(fields: [projectId], references: [id])
    user User @relation(fields: [userId], references: [id])
}

model Commit{
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project Project @relation(fields: [projectId], references: [id])

    commitMessage String
    commitHash String
    commitAuthorName String
    commitAuthorAvatar String
    commitDate DateTime

    // ai summary
    summary String
}

